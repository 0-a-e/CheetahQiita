{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{aoIK:function(module,__webpack_exports__,__webpack_require__){\"use strict\";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,\"startInputShims\",(function(){return startInputShims}));var _helpers_46f4a262_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(\"aiEM\");const cloneMap=new WeakMap,relocateInput=(componentEl,inputEl,shouldRelocate,inputRelativeY=0)=>{cloneMap.has(componentEl)!==shouldRelocate&&(shouldRelocate?addClone(componentEl,inputEl,inputRelativeY):removeClone(componentEl,inputEl))},isFocused=input=>input===input.getRootNode().activeElement,addClone=(componentEl,inputEl,inputRelativeY)=>{const parentEl=inputEl.parentNode,clonedEl=inputEl.cloneNode(!1);clonedEl.classList.add(\"cloned-input\"),clonedEl.tabIndex=-1,parentEl.appendChild(clonedEl),cloneMap.set(componentEl,clonedEl);const tx=\"rtl\"===componentEl.ownerDocument.dir?9999:-9999;componentEl.style.pointerEvents=\"none\",inputEl.style.transform=`translate3d(${tx}px,${inputRelativeY}px,0) scale(0)`},removeClone=(componentEl,inputEl)=>{const clone=cloneMap.get(componentEl);clone&&(cloneMap.delete(componentEl),clone.remove()),componentEl.style.pointerEvents=\"\",inputEl.style.transform=\"\"},SKIP_SELECTOR=\"input, textarea, [no-blur]\",setScrollPadding=(input,keyboardHeight)=>{if(\"INPUT\"!==input.tagName)return;if(input.parentElement&&\"ION-INPUT\"===input.parentElement.tagName)return;if(input.parentElement&&input.parentElement.parentElement&&\"ION-SEARCHBAR\"===input.parentElement.parentElement.tagName)return;const el=input.closest(\"ion-content\");if(null===el)return;const timer=el.$ionPaddingTimer;timer&&clearTimeout(timer),keyboardHeight>0?el.style.setProperty(\"--keyboard-offset\",`${keyboardHeight}px`):el.$ionPaddingTimer=setTimeout(()=>{el.style.setProperty(\"--keyboard-offset\",\"0px\")},120)},startInputShims=config=>{const doc=document,keyboardHeight=config.getNumber(\"keyboardHeight\",290),scrollAssist=config.getBoolean(\"scrollAssist\",!0),hideCaret=config.getBoolean(\"hideCaretOnScroll\",!0),inputBlurring=config.getBoolean(\"inputBlurring\",!0),scrollPadding=config.getBoolean(\"scrollPadding\",!0),inputs=Array.from(doc.querySelectorAll(\"ion-input, ion-textarea\")),hideCaretMap=new WeakMap,scrollAssistMap=new WeakMap,registerInput=componentEl=>{const inputEl=(componentEl.shadowRoot||componentEl).querySelector(\"input\")||(componentEl.shadowRoot||componentEl).querySelector(\"textarea\"),scrollEl=componentEl.closest(\"ion-content\");if(inputEl){if(scrollEl&&hideCaret&&!hideCaretMap.has(componentEl)){const rmFn=((componentEl,inputEl,scrollEl)=>{if(!scrollEl||!inputEl)return()=>{};const scrollHideCaret=shouldHideCaret=>{isFocused(inputEl)&&relocateInput(componentEl,inputEl,shouldHideCaret)},onBlur=()=>relocateInput(componentEl,inputEl,!1),hideCaret=()=>scrollHideCaret(!0),showCaret=()=>scrollHideCaret(!1);return scrollEl.addEventListener(\"ionScrollStart\",hideCaret),scrollEl.addEventListener(\"ionScrollEnd\",showCaret),inputEl.addEventListener(\"blur\",onBlur),()=>{scrollEl.removeEventListener(\"ionScrollStart\",hideCaret),scrollEl.removeEventListener(\"ionScrollEnd\",showCaret),inputEl.addEventListener(\"ionBlur\",onBlur)}})(componentEl,inputEl,scrollEl);hideCaretMap.set(componentEl,rmFn)}if(scrollEl&&scrollAssist&&!scrollAssistMap.has(componentEl)){const rmFn=((componentEl,inputEl,contentEl,keyboardHeight)=>{let coord;const touchStart=ev=>{coord=Object(_helpers_46f4a262_js__WEBPACK_IMPORTED_MODULE_0__.j)(ev)},touchEnd=ev=>{if(!coord)return;const endCoord=Object(_helpers_46f4a262_js__WEBPACK_IMPORTED_MODULE_0__.j)(ev);((threshold,startCoord,endCoord)=>{if(startCoord&&endCoord){const deltaX=startCoord.x-endCoord.x,deltaY=startCoord.y-endCoord.y;return deltaX*deltaX+deltaY*deltaY>36}return!1})(0,coord,endCoord)||isFocused(inputEl)||(ev.preventDefault(),ev.stopPropagation(),((componentEl,inputEl,contentEl,keyboardHeight)=>{const scrollData=((componentEl,contentEl,keyboardHeight)=>((inputRect,contentRect,keyboardHeight,platformHeight)=>{const inputTop=inputRect.top,inputBottom=inputRect.bottom,visibleAreaTop=contentRect.top,safeAreaTop=visibleAreaTop+15,distanceToBottom=.5*Math.min(contentRect.bottom,platformHeight-keyboardHeight)-inputBottom,distanceToTop=safeAreaTop-inputTop,desiredScrollAmount=Math.round(distanceToBottom<0?-distanceToBottom:distanceToTop>0?-distanceToTop:0),scrollAmount=Math.min(desiredScrollAmount,inputTop-visibleAreaTop),distance=Math.abs(scrollAmount);return{scrollAmount:scrollAmount,scrollDuration:Math.min(400,Math.max(150,distance/.3)),scrollPadding:keyboardHeight,inputSafeY:4-(inputTop-safeAreaTop)}})((componentEl.closest(\"ion-item,[ion-item]\")||componentEl).getBoundingClientRect(),contentEl.getBoundingClientRect(),keyboardHeight,componentEl.ownerDocument.defaultView.innerHeight))(componentEl,contentEl,keyboardHeight);Math.abs(scrollData.scrollAmount)<4?inputEl.focus():(relocateInput(componentEl,inputEl,!0,scrollData.inputSafeY),inputEl.focus(),contentEl.scrollByPoint(0,scrollData.scrollAmount,scrollData.scrollDuration).then(()=>{relocateInput(componentEl,inputEl,!1,scrollData.inputSafeY),inputEl.focus()}))})(componentEl,inputEl,contentEl,keyboardHeight))};return componentEl.addEventListener(\"touchstart\",touchStart,!0),componentEl.addEventListener(\"touchend\",touchEnd,!0),()=>{componentEl.removeEventListener(\"touchstart\",touchStart,!0),componentEl.removeEventListener(\"touchend\",touchEnd,!0)}})(componentEl,inputEl,scrollEl,keyboardHeight);scrollAssistMap.set(componentEl,rmFn)}}};inputBlurring&&(()=>{let focused=!0,didScroll=!1;const doc=document;doc.addEventListener(\"ionScrollStart\",()=>{didScroll=!0}),doc.addEventListener(\"focusin\",()=>{focused=!0},!0),doc.addEventListener(\"touchend\",ev=>{if(didScroll)return void(didScroll=!1);const active=doc.activeElement;if(!active)return;if(active.matches(SKIP_SELECTOR))return;const tapped=ev.target;tapped!==active&&(tapped.matches(SKIP_SELECTOR)||tapped.closest(SKIP_SELECTOR)||(focused=!1,setTimeout(()=>{focused||active.blur()},50)))},!1)})(),scrollPadding&&(keyboardHeight=>{const doc=document;doc.addEventListener(\"focusin\",ev=>{setScrollPadding(ev.target,keyboardHeight)}),doc.addEventListener(\"focusout\",ev=>{setScrollPadding(ev.target,0)})})(keyboardHeight);for(const input of inputs)registerInput(input);doc.addEventListener(\"ionInputDidLoad\",ev=>{registerInput(ev.detail)}),doc.addEventListener(\"ionInputDidUnload\",ev=>{(componentEl=>{if(hideCaret){const fn=hideCaretMap.get(componentEl);fn&&fn(),hideCaretMap.delete(componentEl)}if(scrollAssist){const fn=scrollAssistMap.get(componentEl);fn&&fn(),scrollAssistMap.delete(componentEl)}})(ev.detail)})}}}]);","extractedComments":[]}